plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.10.0'
    id "io.freefair.lombok" version "6.0.0-m2"
}

compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}

def restAssuredVersion = "5.3.1",
    allureVersion = "2.21.0"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjVersion.set("1.9.22")
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation(
            'com.codeborne:selenide:7.3.3',
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            'io.qameta.allure:allure-selenide:2.19.0',
            'org.aeonbits.owner:owner:1.0.4',
            "org.junit.jupiter:junit-jupiter:5.10.0",
            "org.assertj:assertj-core:3.27.3",
            'org.slf4j:slf4j-simple:2.0.7',
            'com.github.javafaker:javafaker:1.0.2'
    )
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task full_test (type: Test) {
    useJUnitPlatform {
        includeTags("FullTest")
    }
}

task smoke_test (type: Test) {
    useJUnitPlatform {
        includeTags("smoke")
    }
}